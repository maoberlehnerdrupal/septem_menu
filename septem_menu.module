<?php

/**
 * Name your icons conforming to this pattern
 */
define('SEPTEM_MENU_ICON_PREFIX', 'septem-menu-icon-');

/**
 * Implements hook_page_build().
 */
function septem_menu_page_build(&$page) {
  // stores the names of the icons
  // which are used in the menu
  global $septem_menu_used_icons;
  $septem_menu_used_icons = array();
  // build the menu tree
  $tree = menu_build_tree('septem-menu');
  // builds the html code for the menu
  $menu = _septem_menu_get_menu($tree, 'septem-menu__menu');
  // add the menu to the top of the page
  $page['page_top']['septem_menu'] = array(
    '#markup' => theme(
      'septem_menu_template',
      array(
        'menu' => $menu,
        'icons' => _septem_menu_get_icons(), // load the icons
      )
    ),
  );
}

/**
 * Implements hook_theme().
 */
function septem_menu_theme() {
  return array(
    'septem_menu_template' => array(
      'template'  => 'templates/septem_menu', // septem_menu.tpl.php
      'variables' => array(
        'menu' => NULL,
        'icons' => NULL,
      ),
    ),
  );
}

/**
 * Build the admin menu
 * @param  array   $tree  a menu tree generated by menu_build_tree()
 * @param  string  $class the class for the <ul> element
 * @param  boolean $sub   is the menu a sub menu?
 * @return strign         generated html list
 */
function _septem_menu_get_menu($tree, $class, $sub = FALSE) {
  global $septem_menu_used_icons;
  // start building the menu
  $menu = '<ul class="' . $class . '">';
  // fallback icon if none defined
  $icon = SEPTEM_MENU_ICON_PREFIX . 'grid';
  // different classes for sub menus
  $item_class = $sub ? 'septem-menu__sub-item' : 'septem-menu__item';
  $link_class = $sub ? 'septem-menu__sub-link' : 'septem-menu__link';

  foreach ($tree as $link) {
    // get icon name from menu item title
    if (preg_match('#\[(.+)\]#', $link['link']['title'], $match)) {
      $link['link']['title'] = str_replace($match[0], '', $link['link']['title']);
      $icon = SEPTEM_MENU_ICON_PREFIX . $match[1];
    }
    // add icon to used icons
    $septem_menu_used_icons[$icon] = $icon;
    // add title attribute if not $sub
    $title = !$sub ? ' title="' . $link['link']['title'] . '"' : '';
    //
    $menu .= '
      <li class="' . $item_class . '">
        <a' . $title . ' href="' . url($link['link']['href']) . '" class="' . $link_class . '">
          ' . $link['link']['title'] . '
    ';
    // only add icons to root menu items
    if (!$sub) $menu .= '<svg class="septem-menu__icon" viewBox="0 0 32 32"><g filter=""><use xlink:href="#' . $icon . '"></use></g></svg>';
    $menu .= '</a>';
    // build sub menu
    if (!empty($link['below'])) $menu .= '<div class="septem-menu__sub-wrap"><h3 class="septem-menu__sub-title">' . $link['link']['title'] . '</h3>' . _septem_menu_get_menu($link['below'], 'septem-menu__sub-menu', TRUE) . '</div>';
    $menu .= '</li>';
  }
  return $menu . '</ul>';
}

/**
 * Find custom icons across modules and themes
 * @return string svg icon code
 */
function _septem_menu_get_icons() {
  $icons = &drupal_static(__FUNCTION__);

  if (!isset($icons)) {
    if ($cache = cache_get('septem_menu_icons')) {
      $icons = $cache->data;
    } else {
      $modules = module_list();

      foreach ($modules as $module) {
        $icons .= _septem_menu_get_icons_scan(drupal_get_path('module', $module));
      }

      cache_set('septem_menu_icons', $icons, 'cache');
    }
  }
  return $icons;
}

/**
 * Scan directories for custom icons
 * @return string svg icon code
 */
function _septem_menu_get_icons_scan($dir) {
  global $septem_menu_used_icons;

  $icons = '';
  $matches = file_scan_directory($dir, '#' . SEPTEM_MENU_ICON_PREFIX . '(.+)\.svg#');

  foreach ($matches as $match) {
    if (isset($septem_menu_used_icons[$match->name])) {
      $icons .= file_get_contents($match->uri);
    }
  }
  return $icons;
}